{
  "version": 3,
  "sources": ["../../../../node_modules/@formily/grid/src/observer.ts", "../../../../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js", "../../../../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js", "../../../../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js", "../../../../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js", "../../../../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js", "../../../../node_modules/@juggle/resize-observer/lib/utils/freeze.js", "../../../../node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js", "../../../../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js", "../../../../node_modules/@juggle/resize-observer/lib/utils/element.js", "../../../../node_modules/@juggle/resize-observer/lib/utils/global.js", "../../../../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js", "../../../../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js", "../../../../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js", "../../../../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js", "../../../../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js", "../../../../node_modules/@juggle/resize-observer/lib/utils/process.js", "../../../../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js", "../../../../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js", "../../../../node_modules/@juggle/resize-observer/lib/utils/scheduler.js", "../../../../node_modules/@juggle/resize-observer/lib/ResizeObservation.js", "../../../../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js", "../../../../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js", "../../../../node_modules/@juggle/resize-observer/lib/ResizeObserver.js", "../../../../node_modules/@formily/grid/src/index.ts"],
  "sourcesContent": ["const isHTMLElement = (node: Node): node is HTMLElement => node.nodeType === 1\n\ntype ChildNode = {\n  element?: HTMLElement\n  observer?: MutationObserver\n  dispose?: () => void\n}\n\nexport class ChildListMutationObserver {\n  observer: MutationObserver\n  callback: MutationCallback\n  childList: ChildNode[] = []\n  init: MutationObserverInit\n  constructor(callback: MutationCallback) {\n    this.callback = callback\n    this.observer = new MutationObserver(this.handler)\n  }\n\n  observeChildList(element: HTMLElement) {\n    Array.from(element.children).forEach((node: HTMLElement) => {\n      this.addObserver(node)\n    })\n  }\n\n  addObserver(element: HTMLElement) {\n    const child = this.childList.find((t) => t.element === element)\n    if (!child) {\n      const childIndex = this.childList.length\n      const child = {\n        element,\n        observer: new MutationObserver(this.callback),\n        dispose: () => {\n          if (child.observer) {\n            child.observer.disconnect()\n            delete child.observer\n            this.childList.splice(childIndex, 1)\n          }\n        },\n      }\n      child.observer.observe(child.element, {\n        ...this.init,\n        subtree: false,\n        childList: false,\n        characterData: false,\n        characterDataOldValue: false,\n        attributeOldValue: false,\n      })\n      this.childList.push(child)\n    }\n  }\n\n  removeObserver(element: HTMLElement) {\n    const child = this.childList.find((t) => t.element === element)\n    if (child) {\n      child.dispose?.()\n    }\n  }\n\n  handler = (mutations: MutationRecord[]) => {\n    mutations.forEach((mutation) => {\n      if (mutation.type === 'childList') {\n        mutation.addedNodes.forEach((node) => {\n          if (isHTMLElement(node)) {\n            this.addObserver(node)\n          }\n        })\n        mutation.removedNodes.forEach((node) => {\n          if (isHTMLElement(node)) {\n            this.removeObserver(node)\n          }\n        })\n      }\n    })\n    this.callback(mutations, this.observer)\n  }\n\n  observe = (element: HTMLElement, init?: MutationObserverInit) => {\n    this.init = init\n    this.observeChildList(element)\n    this.observer.observe(element, {\n      ...this.init,\n      subtree: false,\n      childList: true,\n      characterData: false,\n      characterDataOldValue: false,\n      attributeOldValue: false,\n    })\n  }\n\n  disconnect = () => {\n    this.observer.disconnect()\n  }\n}\n", "var resizeObservers = [];\nexport { resizeObservers };\n", "import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n", "import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n", "var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n", "var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n", "export var freeze = function (obj) { return Object.freeze(obj); };\n", "import { freeze } from './utils/freeze';\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        freeze(this);\n    }\n    return ResizeObserverSize;\n}());\nexport { ResizeObserverSize };\n", "import { freeze } from './utils/freeze';\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n", "var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_a = obj === null || obj === void 0 ? void 0 : obj.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n", "export var global = typeof window !== 'undefined' ? window : {};\n", "import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n", "import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nimport { freeze } from './utils/freeze';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = freeze([boxes.borderBoxSize]);\n        this.contentBoxSize = freeze([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n", "import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n", "import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n", "import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n", "import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n", "var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\".concat(toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n", "import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n", "import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n", "import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n", "var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n", "import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n", "import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n", "import { define, observable, batch, reaction } from '@formily/reactive'\nimport { ChildListMutationObserver } from './observer'\nimport { ResizeObserver } from '@juggle/resize-observer'\nexport interface IGridOptions {\n  maxRows?: number\n  maxColumns?: number | number[]\n  minColumns?: number | number[]\n  maxWidth?: number | number[]\n  minWidth?: number | number[]\n  breakpoints?: number[]\n  columnGap?: number\n  rowGap?: number\n  colWrap?: boolean\n  strictAutoFit?: boolean\n  shouldVisible?: (node: GridNode, grid: Grid<HTMLElement>) => boolean\n  onDigest?: (grid: Grid<HTMLElement>) => void\n  onInitialized?: (grid: Grid<HTMLElement>) => void\n}\n\nconst SpanRegExp = /span\\s*(\\d+)/\n\nconst isValid = (value: any) => value !== undefined && value !== null\n\nconst calcBreakpointIndex = (breakpoints: number[], width: number) => {\n  if (Array.isArray(breakpoints)) {\n    for (let i = 0; i < breakpoints.length; i++) {\n      if (width <= breakpoints[i]) {\n        return i\n      }\n    }\n  }\n  return -1\n}\n\nconst calcFactor = <T>(value: T | T[], breakpointIndex: number): T => {\n  if (Array.isArray(value)) {\n    if (breakpointIndex === -1) return value[0]\n    return value[breakpointIndex] ?? value[value.length - 1]\n  } else {\n    return value\n  }\n}\n\nconst parseGridNode = (elements: HTMLCollection): GridNode[] => {\n  return Array.from(elements).reduce((buf, element: HTMLElement, index) => {\n    const style = getComputedStyle(element)\n    const visible = !(style.display === 'none')\n    const origin = element.getAttribute('data-grid-span')\n    const span = parseSpan(style.gridColumnStart) ?? 1\n    const originSpan = Number(origin ?? span)\n    const node: GridNode = {\n      index,\n      span,\n      visible,\n      originSpan,\n      element,\n    }\n    if (!origin) {\n      element.setAttribute('data-grid-span', String(span))\n    }\n    return buf.concat(node)\n  }, [])\n}\n\nconst calcChildTotalColumns = (nodes: GridNode[], shadow = false) =>\n  nodes.reduce((buf, node) => {\n    if (!shadow) {\n      if (!node.visible) return buf\n    }\n    if (node.originSpan === -1) return buf + (node.span ?? 1)\n    return buf + node.span\n  }, 0)\n\nconst calcChildOriginTotalColumns = (nodes: GridNode[], shadow = false) =>\n  nodes.reduce((buf, node) => {\n    if (!shadow) {\n      if (!node.visible) return buf\n    }\n    if (node.originSpan === -1) return buf + (node.span ?? 1)\n    return buf + node.originSpan\n  }, 0)\n\nconst calcSatisfyColumns = (\n  width: number,\n  maxColumns: number,\n  minColumns: number,\n  maxWidth: number,\n  minWidth: number,\n  gap: number\n) => {\n  const results = []\n  for (let columns = minColumns; columns <= maxColumns; columns++) {\n    const innerWidth = width - (columns - 1) * gap\n    const columnWidth = innerWidth / columns\n    if (columnWidth >= minWidth && columnWidth <= maxWidth) {\n      results.push(columns)\n    } else if (columnWidth < minWidth) {\n      results.push(Math.min(Math.floor(innerWidth / minWidth), maxColumns))\n    } else if (columnWidth > maxWidth) {\n      results.push(Math.min(Math.floor(innerWidth / maxWidth), maxColumns))\n    }\n  }\n  return Math.max(...results)\n}\n\nconst parseSpan = (gridColumnStart: string) => {\n  return Number(String(gridColumnStart).match(SpanRegExp)?.[1] ?? 1)\n}\n\nconst factor = <T>(value: T | T[], grid: Grid<HTMLElement>): T =>\n  isValid(value) ? calcFactor(value as any, grid.breakpoint) : value\n\nconst resolveChildren = (grid: Grid<HTMLElement>) => {\n  let walked = 0,\n    shadowWalked = 0,\n    rowIndex = 0,\n    shadowRowIndex = 0\n  if (!grid.ready) return\n  grid.children = grid.children.map((node) => {\n    const columnIndex = walked % grid.columns\n    const shadowColumnIndex = shadowWalked % grid.columns\n    const remainColumns = grid.columns - columnIndex\n    const originSpan = node.originSpan\n    const targetSpan = originSpan > grid.columns ? grid.columns : originSpan\n    const span = grid.options.strictAutoFit\n      ? targetSpan\n      : targetSpan > remainColumns\n      ? remainColumns\n      : targetSpan\n    const gridColumn =\n      originSpan === -1 ? `span ${remainColumns} / -1` : `span ${span} / auto`\n    if (node.element.style.gridColumn !== gridColumn) {\n      node.element.style.gridColumn = gridColumn\n    }\n    if (node.visible) {\n      walked += span\n    }\n    shadowWalked += span\n    if (columnIndex === 0) {\n      rowIndex++\n    }\n    if (shadowColumnIndex == 0) {\n      shadowRowIndex++\n    }\n    node.shadowRow = shadowRowIndex\n    node.shadowColumn = shadowColumnIndex + 1\n    if (node.visible) {\n      node.row = rowIndex\n      node.column = columnIndex + 1\n    }\n    if (grid.options?.shouldVisible) {\n      if (!grid.options.shouldVisible(node, grid)) {\n        if (node.visible) {\n          node.element.style.display = 'none'\n        }\n        node.visible = false\n      } else {\n        if (!node.visible) {\n          node.element.style.display = ''\n        }\n        node.visible = true\n      }\n    }\n    return node\n  })\n}\n\nconst nextTick = (callback?: () => void) => Promise.resolve(0).then(callback)\n\nexport type GridNode = {\n  index?: number\n  visible?: boolean\n  column?: number\n  shadowColumn?: number\n  row?: number\n  shadowRow?: number\n  span?: number\n  originSpan?: number\n  element?: HTMLElement\n}\nexport class Grid<Container extends HTMLElement> {\n  options: IGridOptions\n  width = 0\n  height = 0\n  container: Container\n  children: GridNode[] = []\n  childTotalColumns = 0\n  shadowChildTotalColumns = 0\n  childOriginTotalColumns = 0\n  shadowChildOriginTotalColumns = 0\n  ready = false\n  constructor(options?: IGridOptions) {\n    this.options = {\n      breakpoints: [720, 1280, 1920],\n      columnGap: 8,\n      rowGap: 4,\n      minWidth: 100,\n      colWrap: true,\n      strictAutoFit: false,\n      ...options,\n    }\n    define(this, {\n      options: observable.shallow,\n      width: observable.ref,\n      height: observable.ref,\n      ready: observable.ref,\n      children: observable.ref,\n      childOriginTotalColumns: observable.ref,\n      shadowChildOriginTotalColumns: observable.ref,\n      shadowChildTotalColumns: observable.ref,\n      childTotalColumns: observable.ref,\n      columns: observable.computed,\n      templateColumns: observable.computed,\n      gap: observable.computed,\n      maxColumns: observable.computed,\n      minColumns: observable.computed,\n      maxWidth: observable.computed,\n      minWidth: observable.computed,\n      breakpoints: observable.computed,\n      breakpoint: observable.computed,\n      rowGap: observable.computed,\n      columnGap: observable.computed,\n      colWrap: observable.computed,\n    })\n  }\n\n  set breakpoints(breakpoints) {\n    this.options.breakpoints = breakpoints\n  }\n\n  get breakpoints() {\n    return this.options.breakpoints\n  }\n\n  get breakpoint() {\n    return calcBreakpointIndex(this.options.breakpoints, this.width)\n  }\n\n  set maxWidth(maxWidth) {\n    this.options.maxWidth = maxWidth\n  }\n\n  get maxWidth() {\n    return factor(this.options.maxWidth, this) ?? Infinity\n  }\n\n  set minWidth(minWidth) {\n    this.options.minWidth = minWidth\n  }\n\n  get minWidth() {\n    return factor(this.options.minWidth, this) ?? 100\n  }\n\n  set maxColumns(maxColumns) {\n    this.options.maxColumns = maxColumns\n  }\n\n  get maxColumns() {\n    return factor(this.options.maxColumns, this) ?? Infinity\n  }\n\n  set maxRows(maxRows) {\n    this.options.maxRows = maxRows\n  }\n\n  get maxRows() {\n    return this.options.maxRows ?? Infinity\n  }\n\n  set minColumns(minColumns) {\n    this.options.minColumns = minColumns\n  }\n\n  get minColumns() {\n    return factor(this.options.minColumns, this) ?? 1\n  }\n\n  set rowGap(rowGap) {\n    this.options.rowGap = rowGap\n  }\n\n  get rowGap() {\n    return factor(this.options.rowGap, this) ?? 5\n  }\n\n  set columnGap(columnGap) {\n    this.options.columnGap = columnGap\n  }\n\n  get columnGap() {\n    return factor(this.options.columnGap, this) ?? 10\n  }\n\n  set colWrap(colWrap) {\n    this.options.colWrap = colWrap\n  }\n\n  get colWrap() {\n    return factor(this.options.colWrap, this) ?? true\n  }\n\n  get columns() {\n    if (!this.ready) return 0\n\n    const originTotalColumns = this.childOriginTotalColumns\n\n    if (this.colWrap === false) {\n      return originTotalColumns\n    }\n\n    const baseColumns = this.childSize\n\n    const strictMaxWidthColumns = Math.round(\n      this.width / (this.maxWidth + this.columnGap)\n    )\n\n    const looseMaxWidthColumns = Math.min(\n      originTotalColumns,\n      strictMaxWidthColumns\n    )\n\n    const maxWidthColumns = this.options.strictAutoFit\n      ? strictMaxWidthColumns\n      : looseMaxWidthColumns\n\n    const strictMinWidthColumns = Math.round(\n      this.width / (this.minWidth + this.columnGap)\n    )\n\n    const looseMinWidthColumns = Math.min(\n      originTotalColumns,\n      strictMinWidthColumns\n    )\n\n    const minWidthColumns = this.options.strictAutoFit\n      ? strictMinWidthColumns\n      : looseMinWidthColumns\n\n    const minCalculatedColumns = Math.min(\n      baseColumns,\n      originTotalColumns,\n      maxWidthColumns,\n      minWidthColumns\n    )\n\n    const maxCalculatedColumns = Math.max(\n      baseColumns,\n      originTotalColumns,\n      maxWidthColumns,\n      minWidthColumns\n    )\n\n    const finalColumns = calcSatisfyColumns(\n      this.width,\n      maxCalculatedColumns,\n      minCalculatedColumns,\n      this.maxWidth,\n      this.minWidth,\n      this.columnGap\n    )\n    if (finalColumns >= this.maxColumns) {\n      return this.maxColumns\n    }\n    if (finalColumns <= this.minColumns) {\n      return this.minColumns\n    }\n    return finalColumns\n  }\n\n  get rows() {\n    return Math.ceil(this.childTotalColumns / this.columns)\n  }\n\n  get shadowRows() {\n    return Math.ceil(this.shadowChildTotalColumns / this.columns)\n  }\n\n  get templateColumns() {\n    if (!this.width) return ''\n    if (this.maxWidth === Infinity) {\n      return `repeat(${this.columns},minmax(0,1fr))`\n    }\n    if (this.options.strictAutoFit !== true) {\n      const columnWidth =\n        (this.width - (this.columns - 1) * this.columnGap) / this.columns\n      if (columnWidth < this.minWidth || columnWidth > this.maxWidth) {\n        return `repeat(${this.columns},minmax(0,1fr))`\n      }\n    }\n    return `repeat(${this.columns},minmax(${this.minWidth}px,${this.maxWidth}px))`\n  }\n\n  get gap() {\n    return `${this.rowGap}px ${this.columnGap}px`\n  }\n\n  get childSize() {\n    return this.children.length\n  }\n\n  get fullnessLastColumn() {\n    return this.columns === this.children[this.childSize - 1]?.span\n  }\n\n  connect = (container: Container) => {\n    if (container) {\n      this.container = container\n      const initialize = batch.bound(() => {\n        digest()\n        this.ready = true\n      })\n      const digest = batch.bound(() => {\n        this.children = parseGridNode(this.container.children)\n        this.childTotalColumns = calcChildTotalColumns(this.children)\n        this.shadowChildTotalColumns = calcChildTotalColumns(\n          this.children,\n          true\n        )\n        this.childOriginTotalColumns = calcChildOriginTotalColumns(\n          this.children\n        )\n        this.shadowChildOriginTotalColumns = calcChildOriginTotalColumns(\n          this.children,\n          true\n        )\n        const rect = this.container.getBoundingClientRect()\n        if (rect.width && rect.height) {\n          this.width = rect.width\n          this.height = rect.height\n        }\n        resolveChildren(this)\n        nextTick(() => {\n          this.options?.onDigest?.(this)\n        })\n        if (!this.ready) {\n          nextTick(() => {\n            this.options?.onInitialized?.(this)\n          })\n        }\n      })\n      const mutationObserver = new ChildListMutationObserver(digest)\n      const resizeObserver = new ResizeObserver(digest)\n      const dispose = reaction(() => ({ ...this.options }), digest)\n      resizeObserver.observe(this.container)\n      mutationObserver.observe(this.container, {\n        attributeFilter: ['data-grid-span'],\n        attributes: true,\n      })\n      initialize()\n      return () => {\n        resizeObserver.unobserve(this.container)\n        resizeObserver.disconnect()\n        mutationObserver.disconnect()\n        dispose()\n        this.children = []\n      }\n    }\n\n    return () => {}\n  }\n\n  static id = (options: IGridOptions = {}) =>\n    JSON.stringify(\n      [\n        'maxRows',\n        'maxColumns',\n        'minColumns',\n        'maxWidth',\n        'minWidth',\n        'breakpoints',\n        'columnGap',\n        'rowGap',\n        'colWrap',\n        'strictAutoFit',\n      ].map((key) => options[key])\n    )\n}\n"],
  "mappings": "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",
  "names": ["ChildListMutationObserver", "ResizeObserverBoxOptions", "ResizeObserverSize", "DOMRectReadOnly", "ResizeObserverEntry", "callbacks", "ResizeObserver", "Scheduler", "ResizeObservation", "size", "ResizeObserverDetail", "ResizeObserverController", "ResizeObserver", "Grid", "__assign"]
}
